#! /usr/bin/env python3.6
# -*- coding: utf-8 -*-
from dynamic_reconfigure.parameter_generator_catkin import *

"""
    动态参数客户端：
        1.导包；
        2.创建一个参数生成器；
        3.往生成器添加参数；
        4.配置节点，并退出
        aughor
"""
# 2.创建一个参数生成器；
gen = ParameterGenerator()
# 3.往生成器添加参数；
#add: (name: Any, paramtype: Any, level: Any, description: Any, 
# default: Any | None = None, 
# min: Any | None = None, 
# max: Any | None = None, edit_method: str = "") -> None

#Car parameter
gen.add("H1", double_t,0,"hsv_h",90,0,255)
gen.add("S1", double_t,0,"hsv_s",43,0,255)
gen.add("V1", double_t,0,"hsv_v",50,0,255)
gen.add("H2", double_t,0,"hsv_h",255,0,255)
gen.add("S2", double_t,0,"hsv_s",255,0,255)
gen.add("V2", double_t,0,"hsv_v",255,0,255)
gen.add("ThreshOfWhite", double_t,0,"white binary",175,0,255)
gen.add("Kernel_size", int_t,0,"kernel size",3,1,100)
gen.add("thread", double_t,0,"thread",19000,0,100000)


# # 4.配置节点，并退出。
# generate: (pkgname: Any, nodename: Any, name: Any) -> Any
#最后一个name和cfg文件的名字保持一致
exit(gen.generate("qz_vision","detector","detector_dynamic"))