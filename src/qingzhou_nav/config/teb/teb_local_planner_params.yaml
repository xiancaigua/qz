TebLocalPlannerROS:

 odom_topic: /odom
 map_frame: odom


 #Trajectory
 teb_autosize: True #优化期间允许改变轨迹的时域长度
 dt_ref: 0.42 #0.45局部路径规划的解析度# minimum 0.01  即时间分辨率
 dt_hysteresis: 0.042 #0.045允许改变的时域解析度的浮动范围， 一般为 dt_ref 的 10% 左右 minimum0.002
 global_plan_overwrite_orientation: false #false覆盖全局路径中局部路径点的朝向   !!!可以改为true
 global_plan_viapoint_sep: 0.3 #全局路径上选取的航迹点的间隔。 (new)
 max_global_plan_lookahead_dist: 1.5 # 考虑优化的全局计划子集的最大长度、计划窗口的大小
 feasibility_check_no_poses: 3 #检查轨迹后几个点，若不冲突则认为轨迹有效，根据环境复杂度调整
 global_plan_prune_distance: 0.1 #从当前位置后的一段距离开始裁剪全局路径为局部路径  (new)

 # Robot
 max_vel_x: 0.45 #0.45 最大x前向速度
 max_vel_y: 0  #最大y前向速度，非全向移动小车需要设置为0
 max_vel_x_backwards: 0.32 #0.3最大后退速度
 max_vel_theta: 0.5 #1.0 1.5 最大转向角速度
 acc_lim_x: 0.2 #最大x向加速度
 acc_lim_y: 0  #最大y向加速度，非全向移动小车需要设置为0
 acc_lim_theta: 0.6 #最大角加速度

 # 最小转弯半径, 非阿克曼小车设置为0
 min_turning_radius: 0.6
 wheelbase: 0.3 #foe mini_akm      ???
 cmd_angle_instead_rotvel: false #无论是不是阿克曼小车都设置为false，因为阿克曼小车启用了阿克曼速度转换包
                                 #true则cmd_vel/angular/z内的数据是舵机角度
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon" 默认“point”类型
  type: "polygon"   #多边形类型for akm/mec，默认”point”。
  vertices:  [[0.23,0.19],[0.27,0],[0.23,-0.19],[-0.23, -0.19],[-0.23,0.19]] #机器人形状 for mini_akm
 

# tolerance
 xy_goal_tolerance: 0.19   #目标 xy 偏移容忍度  minimum 0.001 maximum 0.2
 yaw_goal_tolerance: 3.14  #目标 角度 偏移容忍度 minimum 0.001 maximum 0.1  ???单位是什么
 free_goal_vel: false  #允许机器人以最大速度驶向目的地 false   ???为什么不设置为true
 complete_global_plan: True
 

 # Obstacles
 min_obstacle_dist: 0.19 #和障碍物最小距离
 include_costmap_obstacles: True  # 是否启用动态避障
 costmap_obstacles_behind_robot_dist: 1.0  #1.5 限制机器人后方规划时考虑的局部成本地图障碍物
 obstacle_poses_affected: 15   #障碍物姿态受影响0~30   ???
 costmap_converter_plugin: "costmap_converter::CostmapToLinesDBSRANSAC"   # 插件,默认为空,
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5
 include_dynamic_obstacles: False 
 dynamic_obstacle_inflation_dist: 0.15 # 0.1 0.6


 # Optimization  
 no_inner_iterations: 5  # 被外循环调用后内循环的优化次数
 no_outer_iterations: 4  # 执行的外循环的优化次数
 optimization_activate: True  # 是否使用优化器
 optimization_verbose: False  # 是否打印优化过程详情
 penalty_epsilon: 0.1   # 为速度的约束提供缓冲效果，接近障碍物提前减速 ???范围
 obstacle_cost_exponent: 4
 weight_max_vel_x: 2  # 最大x速度权重0~2
 weight_max_vel_y: 1  # 最大y速度权重0~2
 weight_max_vel_theta: 2  # 最大w速度权重0~1
 weight_acc_lim_x: 2  # 最大x加速度权重0~1
 weight_acc_lim_y: 1  # 最大y加速度权重0~1
 weight_acc_lim_theta: 1  # 最大w加速度权重0~1
 weight_kinematics_nh: 100  #1000
 weight_kinematics_forward_drive: 200  # 倒车惩罚 0~1000
 weight_kinematics_turning_radius: 200   # 最小转弯半径权重 0~1000，越大小车越容易到达最小转弯半径
 weight_optimaltime: 20  # 让优化器选择更快的路径,0~1000,直道会加速,弯道也会选择内道加速
 weight_shortest_path: 2  #1
 weight_obstacle: 200   # 优化过程中和障碍物最小距离的权重,0~50
 weight_inflation: 10
 weight_dynamic_obstacle: 10 # 优化过程中和动态障碍物最小距离的权重,0~50
 weight_dynamic_obstacle_inflation: 1.0
 weight_viapoint: 5
 weight_adapt_factor: 2.0


 # Homotopy Class Planner
 enable_homotopy_class_planning: False
 enable_multithreading: False  #多线程
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_prefer_initial_plan: 0.95
 selection_obst_cost_scale: 1.0
 selection_alternative_time_cost: False

 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 roadmap_graph_area_length_scale: 1.0
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_heading_threshold: 0.45
 switching_blocking_period: 0.0
 viapoints_all_candidates: True
 delete_detours_backwards: True
 max_ratio_detours_duration_best_duration: 3.0
 visualize_hc_graph: False
 visualize_with_time_as_z_axis_scale: False


 # Recovery
 shrink_horizon_backup: True
 shrink_horizon_min_duration: 10
 oscillation_recovery: True
 oscillation_v_eps: 0.1
 oscillation_omega_eps: 0.1
 oscillation_recovery_min_duration: 10
 oscillation_filter_duration: 10
